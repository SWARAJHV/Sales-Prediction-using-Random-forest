# -*- coding: utf-8 -*-
"""Datascience_tast5_completed.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dFrbeOoRkuku5zCjYrQO9ys1iIoT44L5
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
from sklearn.ensemble import RandomForestRegressor
from sklearn.model_selection import GridSearchCV

from google.colab import files

df = files.upload()
data = pd.read_csv('Advertising.csv')

data.head(2)

data.isnull().sum()

data.info()

data.describe()

new_column_name = input("Enter the new name for the first column: ")

data.rename(columns={data.columns[0]: new_column_name}, inplace=True)

data.head(4)

# Assuming columns are renamed to meaningful names
data.columns = ['TV', 'Radio', 'Newspaper', 'Sales']

X = data[['TV', 'Radio', 'Newspaper']] #Availabe data to print the data
y = data['Sales']                      #predicting variable

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

model = LinearRegression()

model.fit(X_train, y_train)

y_pred = model.predict(X_test)

mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print("\nLinear Regression Model Evaluation:")
print(f"Mean Squared Error: {mse}")
print(f"R^2 Score: {r2}")

rf_model = RandomForestRegressor(random_state=42)

param_grid = {
    'n_estimators': [100, 200, 300],
    'max_depth': [None, 10, 20, 30],
    'min_samples_split': [2, 5, 10],
    'min_samples_leaf': [1, 2, 4]
}

grid_search = GridSearchCV(estimator=rf_model, param_grid=param_grid, cv=3, n_jobs=-1, verbose=2)

grid_search.fit(X_train, y_train)

best_rf_model = grid_search.best_estimator_
y_pred_rf = best_rf_model.predict(X_test)

mse_rf = mean_squared_error(y_test, y_pred_rf)
r2_rf = r2_score(y_test, y_pred_rf)

print("\nRandom Forest Model Evaluation:")
print(f"Best Parameters: {best_rf_model}")         # best parameter not neccassory
print(f"Random Forest Mean Squared Error: {mse_rf}") #mean suarred error
print(f"Random Forest R^2 Score: {r2_rf}")  #accuracy of the model

print(f"thank you watching my vedio please like share and subscribe and be happy and enjoy every moment")

print(f"hello guys..please fallow my linked in account and give an like to my all posts and my id is Swaraj h v")



